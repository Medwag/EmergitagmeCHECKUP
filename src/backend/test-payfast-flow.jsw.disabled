// test-payfast-flow.jsw
// Quick test function to verify PayFast URL generation
import { generatePayFastUrl } from './payfastUrl.jsw';

export async function testPayFastUrlGeneration() {
  console.log('🧪 Testing PayFast URL generation...');
  
  const testParams = {
    memberData: {
      firstName: 'Test',
      lastName: 'User',
      email: 'test@example.com'
    },
    pricingPlan: {
      planId: 'test-plan-monthly',
      price: 299.00,
      name: 'Premium Monthly Plan'
    },
    planType: 'monthly'
  };
  
  try {
    console.log('📋 Test parameters:', testParams);
    
    const result = await generatePayFastUrl(testParams);
    console.log('📤 PayFast result:', result);
    
    if (result.success && result.redirectUrl) {
      // Check if URL contains [object Promise]
      if (result.redirectUrl.includes('[object Promise]')) {
        console.error('❌ FAILED: URL still contains [object Promise]');
        console.error('🔍 Problematic URL:', result.redirectUrl);
        return { success: false, error: 'URL contains [object Promise]' };
      } else {
        console.log('✅ SUCCESS: URL does not contain [object Promise]');
        console.log('🔗 Generated URL preview:', result.redirectUrl.substring(0, 200) + '...');
        
        // Parse URL to verify parameters
        const url = new URL(result.redirectUrl);
        const params = Object.fromEntries(url.searchParams);
        
        console.log('📊 URL Parameters:');
        Object.entries(params).forEach(([key, value]) => {
          const hasPromise = value.includes('[object Promise]');
          console.log(`  ${key}: ${value} ${hasPromise ? '❌ PROMISE DETECTED' : '✅'}`);
        });
        
        return { 
          success: true, 
          url: result.redirectUrl,
          parameterCount: Object.keys(params).length,
          hasPromises: Object.values(params).some(v => v.includes('[object Promise]'))
        };
      }
    } else {
      console.error('❌ PayFast URL generation failed:', result.error);
      return { success: false, error: result.error };
    }
  } catch (error) {
    console.error('❌ Test error:', error);
    return { success: false, error: error.message };
  }
}

export async function quickPayFastTest() {
  console.log('🚀 Quick PayFast Promise Test');
  const result = await testPayFastUrlGeneration();
  return result;
}